<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="Neethi" failures="0" tests="33" name="Firefox Browser Test" time="0.89" errors="0" timestamp="2022-08-05T20:48:22 IST">
  <testcase classname="executeClass.BaseClass" name="@BeforeMethod beforeMethod" time="0.08">
    <failure type="java.lang.IllegalStateException" message="The path to the driver executable The path to the driver executable must be set by the webdriver.gecko.driver system property; for more information, see https://github.com/mozilla/geckodriver. The latest version can be downloaded from https://github.com/mozilla/geckodriver/releases">
      <![CDATA[java.lang.IllegalStateException: The path to the driver executable The path to the driver executable must be set by the webdriver.gecko.driver system property; for more information, see https://github.com/mozilla/geckodriver. The latest version can be downloaded from https://github.com/mozilla/geckodriver/releases
at org.openqa.selenium.internal.Require$StateChecker.nonNull(Require.java:311)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:135)
at org.openqa.selenium.firefox.GeckoDriverService.access$100(GeckoDriverService.java:45)
at org.openqa.selenium.firefox.GeckoDriverService$Builder.findDefaultExecutable(GeckoDriverService.java:181)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:437)
at org.openqa.selenium.firefox.GeckoDriverService.createDefaultService(GeckoDriverService.java:94)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:98)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:94)
at executeClass.BaseClass.beforeMethod(BaseClass.java:61)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
... Removed 19 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="executeClass.BaseClass" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="executeClass.BaseClass" name="@BeforeMethod beforeMethod" time="0.005">
    <failure type="java.lang.IllegalStateException" message="The path to the driver executable The path to the driver executable must be set by the webdriver.gecko.driver system property; for more information, see https://github.com/mozilla/geckodriver. The latest version can be downloaded from https://github.com/mozilla/geckodriver/releases">
      <![CDATA[java.lang.IllegalStateException: The path to the driver executable The path to the driver executable must be set by the webdriver.gecko.driver system property; for more information, see https://github.com/mozilla/geckodriver. The latest version can be downloaded from https://github.com/mozilla/geckodriver/releases
at org.openqa.selenium.internal.Require$StateChecker.nonNull(Require.java:311)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:135)
at org.openqa.selenium.firefox.GeckoDriverService.access$100(GeckoDriverService.java:45)
at org.openqa.selenium.firefox.GeckoDriverService$Builder.findDefaultExecutable(GeckoDriverService.java:181)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:437)
at org.openqa.selenium.firefox.GeckoDriverService.createDefaultService(GeckoDriverService.java:94)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:98)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:94)
at executeClass.BaseClass.beforeMethod(BaseClass.java:61)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
... Removed 19 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="executeClass.BaseClass" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="executeClass.BaseClass" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="executeClass.BaseClass" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="executeClass.BaseClass" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="executeClass.BaseClass" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="executeClass.BaseClass" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="executeClass.BaseClass" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="executeClass.BaseClass" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="executeClass.BaseClass" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="executeClass.BaseClass" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="executeClass.BaseClass" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="executeClass.BaseClass" name="@BeforeMethod beforeMethod" time="0.005">
    <failure type="java.lang.IllegalStateException" message="The path to the driver executable The path to the driver executable must be set by the webdriver.gecko.driver system property; for more information, see https://github.com/mozilla/geckodriver. The latest version can be downloaded from https://github.com/mozilla/geckodriver/releases">
      <![CDATA[java.lang.IllegalStateException: The path to the driver executable The path to the driver executable must be set by the webdriver.gecko.driver system property; for more information, see https://github.com/mozilla/geckodriver. The latest version can be downloaded from https://github.com/mozilla/geckodriver/releases
at org.openqa.selenium.internal.Require$StateChecker.nonNull(Require.java:311)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:135)
at org.openqa.selenium.firefox.GeckoDriverService.access$100(GeckoDriverService.java:45)
at org.openqa.selenium.firefox.GeckoDriverService$Builder.findDefaultExecutable(GeckoDriverService.java:181)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:437)
at org.openqa.selenium.firefox.GeckoDriverService.createDefaultService(GeckoDriverService.java:94)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:98)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:94)
at executeClass.BaseClass.beforeMethod(BaseClass.java:61)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
... Removed 19 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="executeClass.BaseClass" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="executeClass.BaseClass" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="executeClass.BaseClass" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="executeClass.BaseClass" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="executeClass.BaseClass" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="executeClass.BaseClass" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="executeClass.BaseClass" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="executeClass.BaseClass" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="executeClass.BaseClass" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="executeClass.BaseClass" name="@BeforeMethod beforeMethod" time="0.005">
    <failure type="java.lang.IllegalStateException" message="The path to the driver executable The path to the driver executable must be set by the webdriver.gecko.driver system property; for more information, see https://github.com/mozilla/geckodriver. The latest version can be downloaded from https://github.com/mozilla/geckodriver/releases">
      <![CDATA[java.lang.IllegalStateException: The path to the driver executable The path to the driver executable must be set by the webdriver.gecko.driver system property; for more information, see https://github.com/mozilla/geckodriver. The latest version can be downloaded from https://github.com/mozilla/geckodriver/releases
at org.openqa.selenium.internal.Require$StateChecker.nonNull(Require.java:311)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:135)
at org.openqa.selenium.firefox.GeckoDriverService.access$100(GeckoDriverService.java:45)
at org.openqa.selenium.firefox.GeckoDriverService$Builder.findDefaultExecutable(GeckoDriverService.java:181)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:437)
at org.openqa.selenium.firefox.GeckoDriverService.createDefaultService(GeckoDriverService.java:94)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:98)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:94)
at executeClass.BaseClass.beforeMethod(BaseClass.java:61)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
... Removed 19 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="executeClass.BaseClass" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="executeClass.BaseClass" name="@BeforeMethod beforeMethod" time="0.006">
    <failure type="java.lang.IllegalStateException" message="The path to the driver executable The path to the driver executable must be set by the webdriver.gecko.driver system property; for more information, see https://github.com/mozilla/geckodriver. The latest version can be downloaded from https://github.com/mozilla/geckodriver/releases">
      <![CDATA[java.lang.IllegalStateException: The path to the driver executable The path to the driver executable must be set by the webdriver.gecko.driver system property; for more information, see https://github.com/mozilla/geckodriver. The latest version can be downloaded from https://github.com/mozilla/geckodriver/releases
at org.openqa.selenium.internal.Require$StateChecker.nonNull(Require.java:311)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:135)
at org.openqa.selenium.firefox.GeckoDriverService.access$100(GeckoDriverService.java:45)
at org.openqa.selenium.firefox.GeckoDriverService$Builder.findDefaultExecutable(GeckoDriverService.java:181)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:437)
at org.openqa.selenium.firefox.GeckoDriverService.createDefaultService(GeckoDriverService.java:94)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:98)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:94)
at executeClass.BaseClass.beforeMethod(BaseClass.java:61)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
... Removed 19 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="executeClass.BaseClass" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="executeClass.BaseClass" name="@BeforeMethod beforeMethod" time="0.012">
    <failure type="java.lang.IllegalStateException" message="The path to the driver executable The path to the driver executable must be set by the webdriver.gecko.driver system property; for more information, see https://github.com/mozilla/geckodriver. The latest version can be downloaded from https://github.com/mozilla/geckodriver/releases">
      <![CDATA[java.lang.IllegalStateException: The path to the driver executable The path to the driver executable must be set by the webdriver.gecko.driver system property; for more information, see https://github.com/mozilla/geckodriver. The latest version can be downloaded from https://github.com/mozilla/geckodriver/releases
at org.openqa.selenium.internal.Require$StateChecker.nonNull(Require.java:311)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:135)
at org.openqa.selenium.firefox.GeckoDriverService.access$100(GeckoDriverService.java:45)
at org.openqa.selenium.firefox.GeckoDriverService$Builder.findDefaultExecutable(GeckoDriverService.java:181)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:437)
at org.openqa.selenium.firefox.GeckoDriverService.createDefaultService(GeckoDriverService.java:94)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:98)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:94)
at executeClass.BaseClass.beforeMethod(BaseClass.java:61)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
... Removed 19 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="executeClass.BaseClass" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="executeClass.BaseClass" name="@BeforeMethod beforeMethod" time="0.015">
    <failure type="java.lang.IllegalStateException" message="The path to the driver executable The path to the driver executable must be set by the webdriver.gecko.driver system property; for more information, see https://github.com/mozilla/geckodriver. The latest version can be downloaded from https://github.com/mozilla/geckodriver/releases">
      <![CDATA[java.lang.IllegalStateException: The path to the driver executable The path to the driver executable must be set by the webdriver.gecko.driver system property; for more information, see https://github.com/mozilla/geckodriver. The latest version can be downloaded from https://github.com/mozilla/geckodriver/releases
at org.openqa.selenium.internal.Require$StateChecker.nonNull(Require.java:311)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:135)
at org.openqa.selenium.firefox.GeckoDriverService.access$100(GeckoDriverService.java:45)
at org.openqa.selenium.firefox.GeckoDriverService$Builder.findDefaultExecutable(GeckoDriverService.java:181)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:437)
at org.openqa.selenium.firefox.GeckoDriverService.createDefaultService(GeckoDriverService.java:94)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:98)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:94)
at executeClass.BaseClass.beforeMethod(BaseClass.java:61)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
... Removed 19 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="executeClass.BaseClass" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="executeClass.BaseClass" name="@BeforeMethod beforeMethod" time="0.004">
    <failure type="java.lang.IllegalStateException" message="The path to the driver executable The path to the driver executable must be set by the webdriver.gecko.driver system property; for more information, see https://github.com/mozilla/geckodriver. The latest version can be downloaded from https://github.com/mozilla/geckodriver/releases">
      <![CDATA[java.lang.IllegalStateException: The path to the driver executable The path to the driver executable must be set by the webdriver.gecko.driver system property; for more information, see https://github.com/mozilla/geckodriver. The latest version can be downloaded from https://github.com/mozilla/geckodriver/releases
at org.openqa.selenium.internal.Require$StateChecker.nonNull(Require.java:311)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:135)
at org.openqa.selenium.firefox.GeckoDriverService.access$100(GeckoDriverService.java:45)
at org.openqa.selenium.firefox.GeckoDriverService$Builder.findDefaultExecutable(GeckoDriverService.java:181)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:437)
at org.openqa.selenium.firefox.GeckoDriverService.createDefaultService(GeckoDriverService.java:94)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:98)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:94)
at executeClass.BaseClass.beforeMethod(BaseClass.java:61)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
... Removed 19 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="executeClass.BaseClass" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="executeClass.BaseClass" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="executeClass.BaseClass" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="executeClass.BaseClass" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="executeClass.BaseClass" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="executeClass.BaseClass" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="executeClass.BaseClass" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="executeClass.BaseClass" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="executeClass.BaseClass" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="executeClass.BaseClass" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="executeClass.BaseClass" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="executeClass.BaseClass" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="executeClass.BaseClass" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="executeClass.BaseClass" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="executeClass.BaseClass" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="executeClass.BaseClass" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="executeClass.BaseClass" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="executeClass.BaseClass" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="executeClass.BaseClass" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="executeClass.BaseClass" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="executeClass.BaseClass" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="executeClass.BaseClass" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="executeClass.BaseClass" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="executeClass.BaseClass" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="executeClass.BaseClass" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="executeClass.BaseClass" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="executeClass.BaseClass" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="executeClass.BaseClass" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="executeClass.BaseClass" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="executeClass.BaseClass" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="executeClass.BaseClass" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="executeClass.BaseClass" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="executeClass.BaseClass" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="executeClass.ExecuteLoginPage" name="isHomePageDisplayedWhileLogin" time="0.001">
    <skipped/>
  </testcase> <!-- isHomePageDisplayedWhileLogin -->
  <testcase classname="executeClass.ExecuteDashBoardPage" name="verifyDashBoardIsVisibleAfterLoginOrNot" time="0.0">
    <skipped/>
  </testcase> <!-- verifyDashBoardIsVisibleAfterLoginOrNot -->
  <testcase classname="executeClass.ExecuteDashBoardPage" name="verifyListPagesIsDisplayedWhenClickedOnManagePagesMoreInfo" time="0.0">
    <skipped/>
  </testcase> <!-- verifyListPagesIsDisplayedWhenClickedOnManagePagesMoreInfo -->
  <testcase classname="executeClass.ExecuteLoginPage" name="verifyLoginPageIsVisibleWhileLaunchingTheApplication" time="0.001">
    <skipped/>
  </testcase> <!-- verifyLoginPageIsVisibleWhileLaunchingTheApplication -->
  <testcase classname="executeClass.ExecuteDashBoardPage" name="verifyManageTileIsPresentOrNot" time="0.001">
    <skipped/>
  </testcase> <!-- verifyManageTileIsPresentOrNot -->
  <testcase classname="executeClass.ExecuteLoginPage" name="verifyRememberMeCheckboxIsSelectedOrNot" time="0.0">
    <skipped/>
  </testcase> <!-- verifyRememberMeCheckboxIsSelectedOrNot -->
  <testcase classname="executeClass.ExecuteLoginPage" name="verifySuccessfullLoginWithValidUsernameAndPassword" time="0.0">
    <skipped/>
  </testcase> <!-- verifySuccessfullLoginWithValidUsernameAndPassword -->
  <testcase classname="executeClass.ExecuteManageOrdersPage" name="verifyTheAdminCanSearchAnOrderByUsingOrderId" time="0.0">
    <skipped/>
  </testcase> <!-- verifyTheAdminCanSearchAnOrderByUsingOrderId -->
  <testcase classname="executeClass.ExecuteManageOrdersPage" name="verifyTheAdminCanViewTheOrderDetailsOfSearchedOrder" time="0.0">
    <skipped/>
  </testcase> <!-- verifyTheAdminCanViewTheOrderDetailsOfSearchedOrder -->
  <testcase classname="executeClass.ExecuteLoginPage" name="verifyUnsuccessfullLogin" time="0.001">
    <skipped/>
  </testcase> <!-- verifyUnsuccessfullLogin -->
  <testcase classname="executeClass.ExecuteLoginPage" name="verifyUnsuccessfullLogin" time="0.0">
    <skipped/>
  </testcase> <!-- verifyUnsuccessfullLogin -->
  <testcase classname="executeClass.ExecuteLoginPage" name="verifyUnsuccessfullLogin" time="0.0">
    <skipped/>
  </testcase> <!-- verifyUnsuccessfullLogin -->
  <testcase classname="executeClass.ExecuteManageExpensePage" name="verifyExpenseCategoryListIsDisplayedWhenClickedOnExpenseCategory" time="0.0">
    <skipped/>
  </testcase> <!-- verifyExpenseCategoryListIsDisplayedWhenClickedOnExpenseCategory -->
  <testcase classname="executeClass.ExecuteManageUsersPage" name="verifyListUsersPageIsDisplayedWhenClickedOnManageUsersPage" time="0.0">
    <skipped/>
  </testcase> <!-- verifyListUsersPageIsDisplayedWhenClickedOnManageUsersPage -->
  <testcase classname="executeClass.ExecuteVerifyUsersPage" name="verifyListUsersPageIsDisplayedWhenClickedOnVerifyUsersPage" time="0.0">
    <skipped/>
  </testcase> <!-- verifyListUsersPageIsDisplayedWhenClickedOnVerifyUsersPage -->
  <testcase classname="executeClass.ExecutePushNotificationPage" name="verifyPushNotificationPageIsDisplayedWhenClickedOnPushNotification" time="0.0">
    <skipped/>
  </testcase> <!-- verifyPushNotificationPageIsDisplayedWhenClickedOnPushNotification -->
  <testcase classname="executeClass.ExecuteManageProduct" name="verifyWhenClickedOnManageProductsListProductsIsDisplayed" time="0.0">
    <skipped/>
  </testcase> <!-- verifyWhenClickedOnManageProductsListProductsIsDisplayed -->
  <testcase classname="executeClass.ExecutePushNotificationPage" name="verifyAdminCanSendNotificationSuccessfullyOrNot" time="0.0">
    <skipped/>
  </testcase> <!-- verifyAdminCanSendNotificationSuccessfullyOrNot -->
  <testcase classname="executeClass.ExecuteManageExpensePage" name="verifyTheAdminCanCreateNewExpenseCategory" time="0.0">
    <skipped/>
  </testcase> <!-- verifyTheAdminCanCreateNewExpenseCategory -->
  <testcase classname="executeClass.ExecuteManageProduct" name="verifyTheUserIsAbleToAddNewList" time="0.002">
    <skipped/>
  </testcase> <!-- verifyTheUserIsAbleToAddNewList -->
  <testcase classname="executeClass.ExecuteManageUsersPage" name="verifyUserCanPerformSearchUsingName" time="0.0">
    <skipped/>
  </testcase> <!-- verifyUserCanPerformSearchUsingName -->
  <testcase classname="executeClass.ExecuteVerifyUsersPage" name="verifyUserCanSearchUsingName" time="0.0">
    <skipped/>
  </testcase> <!-- verifyUserCanSearchUsingName -->
  <testcase classname="executeClass.ExecutePushNotificationPage" name="verifyResetButtonIsVisibleOrNot" time="0.0">
    <skipped/>
  </testcase> <!-- verifyResetButtonIsVisibleOrNot -->
  <testcase classname="executeClass.ExecuteManageExpensePage" name="verifyTheAdminCanSearchNewlyCreatedExpenseCategory" time="0.001">
    <skipped/>
  </testcase> <!-- verifyTheAdminCanSearchNewlyCreatedExpenseCategory -->
  <testcase classname="executeClass.ExecuteManageUsersPage" name="verifyUserCanPerformSearchUsingEmail" time="0.0">
    <skipped/>
  </testcase> <!-- verifyUserCanPerformSearchUsingEmail -->
  <testcase classname="executeClass.ExecuteManageProduct" name="verifyUserCanSearchProductUsingProductName" time="0.0">
    <skipped/>
  </testcase> <!-- verifyUserCanSearchProductUsingProductName -->
  <testcase classname="executeClass.ExecuteVerifyUsersPage" name="verifyUserCanSearchUsingPhoneNumber" time="0.0">
    <skipped/>
  </testcase> <!-- verifyUserCanSearchUsingPhoneNumber -->
  <testcase classname="executeClass.ExecuteManageUsersPage" name="verifyTheAdminCanChangeTheStatusOfAnyUser" time="0.0">
    <skipped/>
  </testcase> <!-- verifyTheAdminCanChangeTheStatusOfAnyUser -->
  <testcase classname="executeClass.ExecuteManageExpensePage" name="verifyTheAdminCanEditTheNewlyCreatedExpenseCategory" time="0.0">
    <skipped/>
  </testcase> <!-- verifyTheAdminCanEditTheNewlyCreatedExpenseCategory -->
  <testcase classname="executeClass.ExecuteManageProduct" name="verifyTheUserCanDeleteCreatedProductOrNot" time="0.0">
    <skipped/>
  </testcase> <!-- verifyTheUserCanDeleteCreatedProductOrNot -->
  <testcase classname="executeClass.ExecuteManageProduct" name="verifyResetIsWorkingOrNot" time="0.001">
    <skipped/>
  </testcase> <!-- verifyResetIsWorkingOrNot -->
  <testcase classname="executeClass.ExecuteManageExpensePage" name="verifyTheAdminCanDeleteTheCreatedExpenseCategory" time="0.001">
    <skipped/>
  </testcase> <!-- verifyTheAdminCanDeleteTheCreatedExpenseCategory -->
  <testcase classname="executeClass.ExecuteManageProduct" name="verifyUserCanNavigateToLastPageWhenClickedOnLast" time="0.0">
    <skipped/>
  </testcase> <!-- verifyUserCanNavigateToLastPageWhenClickedOnLast -->
</testsuite> <!-- Firefox Browser Test -->
